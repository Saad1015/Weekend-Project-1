using System;
using System.Data;
using System.Data.SqlClient;
namespace ConsoleApp2
{
    class Program
    {
        static void Main(string[] args)
        {
            

            string connectionString = "Server=cmdlhrdb01;Database=5067_DB;Trusted_Connection=True;";
            using (SqlConnection connection = new SqlConnection(connectionString))
            {
                // 1. Execute Stored Procedure to Get All Students
                using (SqlCommand command = new SqlCommand("GetALLStudents", connection))
                {
                    command.CommandType = CommandType.StoredProcedure;
                    connection.Open();
                    SqlDataReader reader = command.ExecuteReader();
                    while (reader.Read())
                    {
                        Console.WriteLine($"StudentID: {reader["StudentID"]}, FirstName: {reader["FirstName"]}, LastName: {reader["LastName"]}, Age: {reader["Age"]}, CourseID: {reader["CourseID"]}");
                    }
                    connection.Close();
                }

                // 2. Execute Stored Procedure to Add a Student
                using (SqlCommand command = new SqlCommand("AddStudent", connection))
                {
                    command.CommandType = CommandType.StoredProcedure;
                    command.Parameters.AddWithValue("@FirstName", "Mohammad");
                    command.Parameters.AddWithValue("@LastName", "Saad");
                    command.Parameters.AddWithValue("@Age", 34);
                    command.Parameters.AddWithValue("@CourseID", 4);
                    connection.Open();
                    command.ExecuteNonQuery();
                    connection.Close();
                }

                // 3. Execute Stored Procedure to Update a Student's Age
                using (SqlCommand command = new SqlCommand("UpdateStudentRecord", connection))
                {
                    command.CommandType = CommandType.StoredProcedure;
                    command.Parameters.AddWithValue("@ID", 1);
                    command.Parameters.AddWithValue("@NewAge", 41);
                    connection.Open();
                    command.ExecuteNonQuery();
                    connection.Close();
                }

                // 4. Execute Stored Procedure to Delete an Employee
                using (SqlCommand command = new SqlCommand("DeleteStudent", connection))
                {
                    command.CommandType = CommandType.StoredProcedure;
                    command.Parameters.AddWithValue("@ID", 1);
                    connection.Open();
                    command.ExecuteNonQuery();
                    connection.Close();
                }

                // 5. Execute Stored Procedure to List Names of students who are not enrolled in any course
                using (SqlCommand command = new SqlCommand("StudentsnotEnrolled", connection))
                {
                    command.CommandType = CommandType.StoredProcedure;
                    connection.Open();
                    SqlDataReader reader = command.ExecuteReader();
                    while (reader.Read())
                    {
                        Console.WriteLine($"StudentID: FirstName: {reader["FirstName"]}, LastName: {reader["LastName"]}");
                    }
                    connection.Close();
                }

                // 6. Execute Stored Procedure to Find Most popular course (the course with the most students enrolled)
                using (SqlCommand command = new SqlCommand("MostPopularCourse", connection))
                {
                    command.CommandType = CommandType.StoredProcedure;
                    connection.Open();
                    SqlDataReader reader = command.ExecuteReader();
                    while (reader.Read())
                    {
                        Console.WriteLine($"CourseName: {reader["CourseName"]}, totalstudents: {reader["totalstudents"]}");
                    }
                    connection.Close();
                }

                // 7. Execute Stored Procedure to List Students who are older than the average age of students
                using (SqlCommand command = new SqlCommand("StudentsOlder", connection))
                {
                    command.CommandType = CommandType.StoredProcedure;
                    connection.Open();
                    SqlDataReader reader = command.ExecuteReader();
                    while (reader.Read())
                    {
                        Console.WriteLine($"FirstName: {reader["FirstName"]}, LastName: {reader["LastName"]}");
                    }
                    connection.Close();
                }

                // 8. Execute Stored Procedure to Total number of students and average age for each course
                using (SqlCommand command = new SqlCommand("Totalstudentsandaverageage", connection))
                {
                    command.CommandType = CommandType.StoredProcedure;
                    connection.Open();
                    SqlDataReader reader = command.ExecuteReader();
                    while (reader.Read())
                    {
                        Console.WriteLine($"CourseName: {reader["CourseName"]}, TotalStudents: {reader["TotalStudents"]}, AverageAge: {reader["AverageAge"]}");
                    }
                    connection.Close();
                }

                // 9. Execute Stored Procedure to List Courses that have no students enrolled in them
                using (SqlCommand command = new SqlCommand("Courseswithoutstudents", connection))
                {
                    command.CommandType = CommandType.StoredProcedure;
                    connection.Open();
                    SqlDataReader reader = command.ExecuteReader();
                    while (reader.Read())
                    {
                        Console.WriteLine($"CourseName: {reader["CourseName"]}");
                    }
                    connection.Close();
                }

                // 10. Execute Stored Procedure to Get All Students
                using (SqlCommand command = new SqlCommand("CourseShare", connection))
                {
                    command.CommandType = CommandType.StoredProcedure;
                    connection.Open();
                    SqlDataReader reader = command.ExecuteReader();
                    while (reader.Read())
                    {
                        Console.WriteLine($"FirstName: {reader["FirstName"]}, LastName: {reader["LastName"]}");
                    }
                    connection.Close();
                }

                // 11. Execute Stored Procedure to List the youngest and oldest student
                using (SqlCommand command = new SqlCommand("Youngestandoldeststudent", connection))
                {
                    command.CommandType = CommandType.StoredProcedure;
                    connection.Open();
                    SqlDataReader reader = command.ExecuteReader();
                    while (reader.Read())
                    {
                        Console.WriteLine($"CourseName: {reader["CourseName"]}, YoungestStudent: {reader["YoungestStudent"]}, OldestStudent: {reader["OldestStudent"]}");
                    }
                    connection.Close();
                }
            }
        }
    }
}
